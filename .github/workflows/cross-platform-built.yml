name: Aseprite Cross-Platform Build

on:
  workflow_dispatch:
    inputs:
      aseprite_version:
        description: 'Aseprite version to build (leave empty for latest)'
        required: false
        default: ''

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: ubuntu-debian
            artifact_name: aseprite-ubuntu-debian
          - os: macos-latest
            platform: macos
            artifact_name: aseprite-macos
          - os: windows-latest
            platform: windows
            artifact_name: aseprite-windows
          - os: arch-latest
            platform: arch
            artifact_name: aseprite-arch
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout Aseprite source
      uses: actions/checkout@v3
      with:
        repository: aseprite/aseprite
        ref: ${{ github.event.inputs.aseprite_version || 'main' }}
        submodules: recursive

    - name: Setup build dependencies
      run: |
        if [ "${{ matrix.platform }}" == "ubuntu-debian" ]; then
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev
        elif [ "${{ matrix.platform }}" == "macos" ]; then
          brew install cmake ninja
        elif [ "${{ matrix.platform }}" == "windows" ]; then
          choco install cmake ninja
        elif [ "${{ matrix.platform }}" == "arch" ]; then
          sudo pacman -S gcc clang libc++ cmake ninja libx11 libxcursor mesa-libgl fontconfig libwebp
        fi
      shell: bash

    - name: Build Aseprite
      run: |
        mkdir build
        cd build
        cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=${{ github.workspace }}/skia \
          -DSKIA_LIBRARY_DIR=${{ github.workspace }}/skia/out/Release-x64 \
          ..
        ninja aseprite
      shell: bash

    - name: Package Aseprite
      run: |
        mkdir artifact
        if [ "${{ matrix.platform }}" == "ubuntu-debian" ]; then
          cp -r build/bin/aseprite artifact/
        elif [ "${{ matrix.platform }}" == "macos" ]; then
          cp -r build/bin/Aseprite.app artifact/
        elif [ "${{ matrix.platform }}" == "windows" ]; then
          cp -r build/bin/aseprite.exe artifact/
        elif [ "${{ matrix.platform }}" == "arch" ]; then
          cp -r build/bin/aseprite artifact/
        fi
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: artifact/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          aseprite-ubuntu-debian/*
          aseprite-macos/*
          aseprite-windows/*
          aseprite-arch/*
        tag_name: ${{ github.event.inputs.aseprite_version || 'latest' }}
